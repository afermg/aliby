#+title: aliby

The microscope visits multiple positions during an experiment. Each position may have a different setup or strain. We denote this strain as a *group*. For every position, we take an image for every time point.

We divide all images into *tiles*, one per trap. Baby determines masks, mother-bud pairs, and tracking for each tile. We obtain data on individual cells first for each tile and then for each position for all time points: *cells* and *signal* provide this information for a position; *grouper* concatenates over all positions.

All global parameters, such as possible fluorescence channels and pixel sizes, and default functions to apply to cells are stored in *global_settings*.

* aliby/pipeline
Runs the *tiler*, *baby*, and *extraction* steps of the pipeline, and then *postprocessing*.
The *run* function loops through positions, calling *run_one_position*, which loops through time points.
For each time point, each step of the pipeline has a *_run_tp* function, which StepABC renames to *run_tp* and wraps in a timer function, to process one time point for a position.
Extractor does not have an independent writer, but writes to the h5 file in *_run_tp*.

* aliby/tile/tiler
Tiles image into smaller regions of interest or tiles, one per trap, for faster processing. We ignore tiles without cells.

* aliby/baby_sitter
Interfaces with Baby through the *BabyRunner* class, which returns a dict of Baby's results.

* extraction/core/extractor
Extracts areas and volumes and the fluorescence data from the images for the cells in one position, via the image tiles, using the cell masks found by Baby.

We save the cell properties we wish to extract as a nested dictionary, such as
        {'general': {'None': ['area', 'volume', 'eccentricity']}}.
*extract_tp* extracts data for one time point.

** extraction/core/functions/cell.py
Defines the standard functions, such as area and median, that we apply to pixels from individual cells. We define multichannel functions here too.
** extraction/core/functions/trap.py
Determines properties of a tile's background.
** extraction/core/functions/distributors.py
Collapses multiple z-sections to a 2D image.

* agora/bridge
Interfaces with h5 files.
* agora/cells
A class for accessing information on cells and masks for tiles from an h5 file. Attributes are only created when you request particular data.
* agora/signal
Signal is only used during postprocessing.

Gets extracted properties, such as median fluorescence, for all cells and all time points from an h5 file - data for one position.

Defines the time variable from integer-labelled columns.

Signal applies picking and merging of cells using the choices made by *picker* and *merger*. *get_raw* gets the data from the h5 file without any picking and merging.

* postprocessor/core/postprocessing
For one position, the *run* function performs picking, of appropriate cells, and merging, of tracklets, via *run_prepost* and then runs processes, such as the *buddings* and *bud_metric* functions, on signals, such as *volume*, to get new signals, such as *buddings* and *bud_volume*.

The class *PostProcessorParameters* lists the obligatory processes we perform, such as running *buddings* and *bud_metric* on *area*.

* postprocessor/core/reshapers/picker
Selects cells from a Signal for which there is lineage information, identifying cells as being buds of mothers, and by how long they remain in the experiment, default is at least three time points, writing the choices to the h5 file.
* postprocessor/core/reshapers/merger
Combines tracks that should be a single track of the same cell, writing the choices to the h5 file.
* agora/utils/indexing
Core code needed when *picker* uses Baby's lineage information to select mother-bud pairs in a Signal.

* postprocessor/grouper
*concat_signal*: Concatenates signals from different h5 files - we have one per position - to generate dataframes for the entire experiment.

* aliby/io/omero
Contains functions to interact with OMERO and extract information on an *Image* corresponding to an OMERO image ID or a *Dataset* corresponding to an OMERO experiment ID.

* Language
We use *tile* and *trap* interchangeably, but *tile* is preferred.
We use *bud* and *daughter* interchangeably, but *bud* is preferred.
We use *record* and *kymograph* interchangeably, but *record* is preferred.
